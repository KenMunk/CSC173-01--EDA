<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='CompleteParticipantLogs_HubsOfPeople' inline='true' name='federated.0czb4sw1oarge2180x0az0q1021p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CompleteParticipantLogs_HubsOfPeople' name='textscan.0wz7chs0vfcm7819wynid19c6eek'>
            <connection class='textscan' directory='D:/SchoolRepositories/CSC173-01--EDA/WrangledData' filename='CompleteParticipantLogs_HubsOfPeople.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0wz7chs0vfcm7819wynid19c6eek' name='CompleteParticipantLogs_HubsOfPeople.csv' table='[CompleteParticipantLogs_HubsOfPeople#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='string' name='currentMode' ordinal='1' />
            <column datatype='integer' name='countdistinct_participantId' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0wz7chs0vfcm7819wynid19c6eek' name='CompleteParticipantLogs_HubsOfPeople.csv' table='[CompleteParticipantLogs_HubsOfPeople#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='string' name='currentMode' ordinal='1' />
            <column datatype='integer' name='countdistinct_participantId' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CompleteParticipantLogs_HubsOfPeople.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[CompleteParticipantLogs_HubsOfPeople.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CompleteParticipantLogs_HubsOfPeople.csv_2B22EF0C0467452585EA98E0E37F6E96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currentMode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[currentMode]</local-name>
            <parent-name>[CompleteParticipantLogs_HubsOfPeople.csv]</parent-name>
            <remote-alias>currentMode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CompleteParticipantLogs_HubsOfPeople.csv_2B22EF0C0467452585EA98E0E37F6E96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countdistinct_participantId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[countdistinct_participantId]</local-name>
            <parent-name>[CompleteParticipantLogs_HubsOfPeople.csv]</parent-name>
            <remote-alias>countdistinct_participantId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CompleteParticipantLogs_HubsOfPeople.csv_2B22EF0C0467452585EA98E0E37F6E96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percentile Participants' datatype='real' name='[Calculation_1222445872688754688]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='round(([Calculation_1222445872690094081]/1011)*10)/10' />
      </column>
      <column caption='Total Participants At Location' datatype='integer' name='[Calculation_1222445872690094081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([countdistinct_participantId])' />
      </column>
      <column caption='Longitude Step 250' datatype='string' name='[Calculation_2400700125261434880]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Location],&apos;,&apos;,1)' />
      </column>
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Latitude Step 250' datatype='string' name='[Longitude Step 250 (copy)_2400700125261750273]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Location],&apos;,&apos;,2)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CompleteParticipantLogs_HubsOfPeople.csv' datatype='table' name='[__tableau_internal_object_id__].[CompleteParticipantLogs_HubsOfPeople.csv_2B22EF0C0467452585EA98E0E37F6E96]' role='measure' type='quantitative' />
      <column caption='Participant Count' datatype='integer' name='[countdistinct_participantId]' role='measure' type='quantitative' />
      <column caption='Current Mode' datatype='string' name='[currentMode]' role='dimension' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[currentMode]' derivation='None' name='[none:currentMode:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Current Mode,Location)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:currentMode:nk]' />
          <groupfilter function='level-members' level='[none:Location:nk]' />
        </groupfilter>
      </group>
      <mapped-images>
        <mapped-image caption='CSC173-01--kmunk--A2--EDA--BaseMap--HighContrast' expression='file:///D:/SchoolRepositories/CSC173-01--EDA/WrangledData/CSC173-01--kmunk--A2--EDA--BaseMap--HighContrast.png' name='[MappedImage1]'>
          <mapping bottom='0' left='-4710' right='2650' top='7850' x='[countdistinct_participantId]' y='[countdistinct_participantId]' />
        </mapped-image>
      </mapped-images>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:currentMode:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;AtHome&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;AtWork&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;AtRestaurant&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;AtRecreation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CompleteParticipantLogs_HubsOfPeople.csv' id='CompleteParticipantLogs_HubsOfPeople.csv_2B22EF0C0467452585EA98E0E37F6E96'>
            <properties context=''>
              <relation connection='textscan.0wz7chs0vfcm7819wynid19c6eek' name='CompleteParticipantLogs_HubsOfPeople.csv' table='[CompleteParticipantLogs_HubsOfPeople#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='string' name='currentMode' ordinal='1' />
                  <column datatype='integer' name='countdistinct_participantId' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Q5--ZonePrioritization'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Area prioritization based on participant utilization</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CompleteParticipantLogs_HubsOfPeople' name='federated.0czb4sw1oarge2180x0az0q1021p' />
          </datasources>
          <datasource-dependencies datasource='federated.0czb4sw1oarge2180x0az0q1021p'>
            <column caption='Percentile Participants' datatype='real' name='[Calculation_1222445872688754688]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='round(([Calculation_1222445872690094081]/1011)*10)/10' />
            </column>
            <column caption='Total Participants At Location' datatype='integer' name='[Calculation_1222445872690094081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([countdistinct_participantId])' />
            </column>
            <column caption='str(Round([Percentile Participants],2)*10)' datatype='string' name='[Calculation_1222445872693137416]' role='measure' type='nominal' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='str(Round([Calculation_1222445872688754688],2)*10)' />
            </column>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Participant Count' datatype='integer' name='[countdistinct_participantId]' role='measure' type='quantitative' />
            <column caption='Current Mode' datatype='string' name='[currentMode]' role='dimension' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[currentMode]' derivation='None' name='[none:currentMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1222445872688754688]' derivation='User' name='[usr:Calculation_1222445872688754688:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1222445872690094081]' derivation='User' name='[usr:Calculation_1222445872690094081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1222445872693137416]' derivation='User' name='[usr:Calculation_1222445872693137416:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0czb4sw1oarge2180x0az0q1021p].[Inclusions (Current Mode,Location)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:currentMode:nk]' member='&quot;AtHome&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1000, 1250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1250, 5750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1500, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2000, 3250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 7250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3750, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 5500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4250, 7250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-500, 3500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-500, 6250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-750, 4500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1500, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1750&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:currentMode:nk]' member='&quot;AtRecreation&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1500, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1500, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 5000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3750, 6250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3750, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 6000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-500, 3500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1000, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1750, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;750, 1000&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:currentMode:nk]' member='&quot;AtRestaurant&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1250, 5750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1500, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1500, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2000, 3250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2000, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2250, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 7250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 5500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4250, 7250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-500, 6250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-750, 4500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1500, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;750, 4500&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:currentMode:nk]' member='&quot;AtWork&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1000, 1250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-1750, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2000, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-2250, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 3750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-250, 5000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3250, 7250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3750, 6250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-3750, 6500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 5500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-4000, 6750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-500, 3500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;-750, 4500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1000, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1500, 4000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;1750, 4250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1250&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1500&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;500, 1750&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;750, 1000&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;750, 4500&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0czb4sw1oarge2180x0az0q1021p].[none:Location:nk]' direction='DESC' using='[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872688754688:ok]' />
          <filter class='categorical' column='[federated.0czb4sw1oarge2180x0az0q1021p].[none:currentMode:nk]'>
            <groupfilter from='&quot;AtHome&quot;' function='range' level='[none:currentMode:nk]' to='&quot;AtWork&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0czb4sw1oarge2180x0az0q1021p].[none:currentMode:nk]</column>
            <column>[federated.0czb4sw1oarge2180x0az0q1021p].[Inclusions (Current Mode,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872690094081:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872690094081:qk]' scope='cols' value='Ranking points are distributed based off of the utilization in all 4 areas of work, recreation, home, and food.  Sectors with less than 40 participants dropped' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872693137416:nk]' />
              <color column='[federated.0czb4sw1oarge2180x0az0q1021p].[none:currentMode:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872693137416:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0czb4sw1oarge2180x0az0q1021p].[none:Location:nk]</rows>
        <cols>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872690094081:qk]</cols>
      </table>
      <simple-id uuid='{295CBEFC-6116-4180-B7F8-B0A2355D169B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Q5--ZonePrioritization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0czb4sw1oarge2180x0az0q1021p].[none:currentMode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[none:Location:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[none:currentMode:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[sum:Calculation_1222445872688754688:ok]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872688754688:ok]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872692490242:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872692776963:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872692838404:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872692924421:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872692981766:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872693071879:nk]</field>
            <field>[federated.0czb4sw1oarge2180x0az0q1021p].[usr:Calculation_1222445872693137416:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EB5275A-4B05-43FA-BB6D-B8F3B640D685}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q5--ZonePrioritization' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
